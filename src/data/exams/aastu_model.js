const aastuMock1 = {
  id: 'aastuMock1',
  title: 'AASTU MOCK-1',
  year: 2024,
  type: 'mock',
  image: 'aastu.png',
  questions: [
    {
      id: '1',
      text: 'The evolution of software is not to be comprised of:',
      options: [
        'Development activities',
        'Re-engineering activities',
        'Maintenance activities',
        'Negotiating with client',
      ],
      correctAnswerIndex: 3,
      explanation:
        'Client negotiation is a business activity, not part of technical software evolution.',
    },
    {
      id: '2',
      text: 'Program modularization and source code translation are activities of:',
      options: [
        'Forward engineering',
        'Reverse Engineering',
        'Reengineering',
        'Reverse Engineering and Reengineering',
      ],
      correctAnswerIndex: 2,
      explanation:
        'Reengineering involves restructuring while preserving functionality.',
    },
    {
      id: '3',
      text: 'Software maintenance includes:',
      options: [
        'Error corrections',
        'Enhancements of capabilities',
        'Deletion of obsolete capabilities',
        'All of the mentioned',
      ],
      correctAnswerIndex: 3,
      explanation:
        'Includes corrective, perfective, adaptive, and preventive maintenance.',
    },
    {
      id: '4',
      text: 'Improving software performance is called:',
      options: [
        'Corrective Maintenance',
        'Perfective Maintenance',
        'Adaptive Maintenance',
        'Preventive Maintenance',
      ],
      correctAnswerIndex: 1,
      explanation: 'Perfective maintenance enhances performance.',
    },
    {
      id: '5',
      text: 'A method requiring excessive information from another class demonstrates:',
      options: ['Lazy Method', 'Long Method', 'Feature Envy', 'Inline Method'],
      correctAnswerIndex: 2,
      explanation:
        'Feature Envy suggests the method should belong to the other class.',
    },
    {
      id: '6',
      text: 'A search algorithm takes ______ and returns ______:',
      options: [
        'Input, output',
        'Problem, solution',
        'Solution, problem',
        'Parameters, sequence of actions',
      ],
      correctAnswerIndex: 1,
      explanation: 'Algorithms solve problems by producing solutions.',
    },
    {
      id: '7',
      text: 'Performance measurement components for problem-solving:',
      options: [
        'Completeness',
        'Optimality',
        'Time and Space complexity',
        'All of the mentioned',
      ],
      correctAnswerIndex: 3,
      explanation: 'All factors contribute to performance evaluation.',
    },
    {
      id: '8',
      text: 'TSP problem time complexity without prior knowledge:',
      options: ['O(n)', 'O(n²)', 'O(n!)', 'O(n/2)'],
      correctAnswerIndex: 2,
      explanation: 'Traveling Salesman Problem has factorial complexity.',
    },
    {
      id: '9',
      text: 'Valid statement about heuristic functions:',
      options: [
        'Solves math problems',
        'Takes string parameters',
        'Has no return type',
        'Calculates optimal path cost',
      ],
      correctAnswerIndex: 3,
      explanation: 'Heuristics estimate costs between states.',
    },
    {
      id: '10',
      text: 'AI field handling vague information like human intuition:',
      options: [
        'Functional Logic',
        'Fuzzy Logic',
        'Boolean Logic',
        'Human Logic',
      ],
      correctAnswerIndex: 1,
      explanation: 'Fuzzy Logic handles approximate reasoning.',
    },
    {
      id: '11',
      text: 'Best describes Machine Learning:',
      options: [
        'Creating intelligent machines',
        'Subset of AI, learns from data without explicit programming',
        'Uses neural networks like human brain',
        'All',
      ],
      correctAnswerIndex: 1,
      explanation: 'ML focuses on learning from data patterns.',
    },
    {
      id: '12',
      text: 'Cross-validation in ML:',
      options: [
        'Trains models on best premises',
        'Reduces overfitting',
        'Assesses performance via dataset splitting',
        'Visualizes decision boundaries',
      ],
      correctAnswerIndex: 2,
      explanation: 'Evaluates model generalization capability.',
    },
    {
      id: '13',
      text: 'Common classification algorithm:',
      options: ['k-means', 'Decision trees', 'PCA', 'Linear regression'],
      correctAnswerIndex: 1,
      explanation: 'Decision trees are supervised classifiers.',
    },
    {
      id: '14',
      text: 'Overfitting refers to:',
      options: [
        'Good on training, poor on unseen data',
        'Good on unseen, poor on training',
        'Too few parameters',
        'Too many features',
      ],
      correctAnswerIndex: 0,
      explanation: 'Overfitting memorizes training data without generalizing.',
    },
    {
      id: '15',
      text: 'Backpropagation in neural networks:',
      options: [
        'Output layer activation',
        'Clustering algorithm',
        'Weight update process',
        'Dimensionality reduction',
      ],
      correctAnswerIndex: 2,
      explanation: 'Adjusts weights to minimize error.',
    },
    {
      id: '16',
      text: 'Major difficulty in layered OS design:',
      options: [
        'Defining layers',
        'Hiding data structures',
        'Debugging layers',
        'Layer conversion to modules',
      ],
      correctAnswerIndex: 0,
      explanation: 'Layer abstraction boundaries are challenging to define.',
    },
    {
      id: '17',
      text: 'CPU-bound program behavior:',
      options: [
        'Long I/O bursts',
        'Short CPU bursts',
        'Short I/O bursts',
        'Long CPU bursts',
      ],
      correctAnswerIndex: 3,
      explanation: 'CPU-bound programs maximize processor usage.',
    },
    {
      id: '18',
      text: 'Page fault occurs when:',
      options: [
        'Requesting more memory',
        'Modifying in-memory page',
        'Accessing non-resident page',
        'OS maintains page table',
      ],
      correctAnswerIndex: 2,
      explanation: 'Triggered by accessing unmapped pages.',
    },
    {
      id: '19',
      text: 'Purpose of FAT:',
      options: [
        'Store file metadata',
        'Track free/allocated space',
        'Directory structure',
        'List bad sectors',
      ],
      correctAnswerIndex: 1,
      explanation: 'File Allocation Table manages disk space.',
    },
    {
      id: '20',
      text: 'Second Chance page replacement:',
      options: ['Page A', 'Page B', 'Page H', 'Cannot determine'],
      correctAnswerIndex: 3,
      explanation: 'All reference bits are 1 - needs more info.',
    },
    {
      id: '21',
      text: 'Worst-fit allocation for 180MB process:',
      options: ['250MB', '350MB', '200MB', '500MB'],
      correctAnswerIndex: 3,
      explanation: 'Selects largest available partition (500MB).',
    },
    {
      id: '22',
      text: 'Incorrect statement about requirements traceability:',
      options: [
        'Links to components',
        'Links to sub-systems',
        'Links dependent requirements',
        'Links to external interfaces',
      ],
      correctAnswerIndex: 1,
      explanation: 'Should link to stakeholders, not sub-systems.',
    },
    {
      id: '23',
      text: 'Deriving requirements via observation is:',
      options: ['Elicitation', 'Specification', 'Gathering', 'All'],
      correctAnswerIndex: 0,
      explanation: 'Elicitation discovers requirements through research.',
    },
    {
      id: '24',
      text: 'Odd one about requirements:',
      options: ['SRS', 'Functional Spec', 'Validation', 'Definition'],
      correctAnswerIndex: 2,
      explanation: 'Validation is a process, others are documents.',
    },
    {
      id: '25',
      text: 'Requirement change is rejected when:',
      options: [
        'Change is valid',
        'Consequential changes unacceptable',
        'Implementation cost too low',
        'None',
      ],
      correctAnswerIndex: 1,
      explanation: 'Unacceptable impacts justify rejection.',
    },
    {
      id: '26',
      text: 'Correct requirements review process:',
      options: [
        'Plan → Distribute → Prepare → Meet → Follow-up → Revise',
        'Plan → Prepare → Distribute → Meet → Follow-up → Revise',
        'Plan → Distribute → Prepare → Meet → Revise → Follow-up',
        'Plan → Prepare → Distribute → Meet → Revise → Follow-up',
      ],
      correctAnswerIndex: 1,
      explanation: 'Preparation before distribution ensures quality.',
    },
    {
      id: '27',
      text: 'Layer ensuring end-to-end communication:',
      options: ['Presentation', 'Session', 'Transport', 'Network'],
      correctAnswerIndex: 2,
      explanation: 'Transport layer handles flow control.',
    },
    {
      id: '28',
      text: 'Error detection using checksum:',
      options: ['Cut-Through', 'CRC', 'Parity bit', 'Fragment-Free'],
      correctAnswerIndex: 1,
      explanation: 'CRC is a checksum-based method.',
    },
    {
      id: '29',
      text: 'Usable hosts in 192.168.1.0/24:',
      options: ['254', '255', '256', '512'],
      correctAnswerIndex: 0,
      explanation: '2⁸ - 2 = 254 (subtract network and broadcast).',
    },
    {
      id: '30',
      text: 'Subnetting 192.168.1.0/24 for 3 subnets (10+ hosts each):',
      options: ['/27 subnets', '/29 subnets', '/30 subnets', '/31 subnets'],
      correctAnswerIndex: 0,
      explanation: '/27 provides 30 hosts per subnet (sufficient for 10+).',
    },
    {
      id: '31',
      text: 'Which transport layer protocol is connectionless and does not provide reliable delivery or flow control?',
      options: ['TCP', 'UDP', 'HTTP', 'SMTP'],
      correctAnswerIndex: 1,
      explanation:
        'UDP (User Datagram Protocol) is connectionless and does not guarantee delivery, making it faster but unreliable compared to TCP.',
    },
    {
      id: '32',
      text: 'What is the primary purpose of DHCP (Dynamic Host Configuration Protocol) in a network?',
      options: [
        'Assigning IP addresses dynamically',
        'Resolving domain names to IP addresses',
        'Ensuring secure communication',
        'Monitoring network devices',
      ],
      correctAnswerIndex: 0,
      explanation:
        'DHCP automatically assigns IP addresses to devices on a network, eliminating manual configuration.',
    },
    {
      id: '33',
      text: 'In which programming paradigm does the focus lie on describing what needs to be achieved, rather than specifying how to achieve it?',
      options: ['Imperative', 'Declarative', 'Object-oriented', 'Functional'],
      correctAnswerIndex: 1,
      explanation:
        'Declarative programming (e.g., SQL, HTML) focuses on the "what" rather than the step-by-step "how".',
    },
    {
      id: '34',
      text: 'Given the Java code with class inheritance, what is the output?',
      options: [
        'Universe View',
        'Universe Subset',
        'Galaxy Subset',
        'Galaxy View',
      ],
      correctAnswerIndex: 1,
      explanation:
        'The method uses dynamic binding (subclass implementation), while the field uses static binding (superclass value).',
    },
    {
      id: '35',
      text: 'How to correctly call a static method from an interface in Java?',
      options: [
        'display();',
        'Bar.display();',
        'Foo.display();',
        'f.display();',
      ],
      correctAnswerIndex: 2,
      explanation:
        'Interface static methods must be called using the interface name (Foo.display()).',
    },
    {
      id: '36',
      text: 'Which JavaFX code creates a vertical line at 1/4th of a 600x400 scene?',
      options: [
        'Line(150, 0, 150, 400)',
        'Line(150, 0, 150, 200)',
        'Line(150, 0, 300, 400)',
        'Line(150, 0, 300, 200)',
      ],
      correctAnswerIndex: 0,
      explanation:
        '600/4=150px X-coordinate, full height (400px) creates a perfect vertical line.',
    },
    {
      id: '37',
      text: 'Which Java class structure best represents a social media design with Users, Posts, and Reactions?',
      options: ['Option A', 'Option B', 'Option C', 'Option D'],
      correctAnswerIndex: 1,
      explanation:
        'Option B correctly models the relationships with separate Reaction classes linking Users and Posts.',
    },
    {
      id: '38',
      text: 'Symmetric key encryption for authentication relies on:',
      options: [
        'Encrypting with private key',
        'Encrypting with public key',
        'Sending shared secret',
        'Detecting wrong-key messages',
      ],
      correctAnswerIndex: 3,
      explanation:
        'The recipient must identify messages encrypted with incorrect keys.',
    },
    {
      id: '39',
      text: 'What is the relationship between vulnerabilities and countermeasures?',
      options: [
        'Vulnerabilities exploit countermeasures',
        'Countermeasures address vulnerabilities',
        'They are unrelated',
        'Countermeasures cause vulnerabilities',
      ],
      correctAnswerIndex: 1,
      explanation:
        'Countermeasures are solutions designed to mitigate vulnerabilities.',
    },
    {
      id: '40',
      text: 'Which encryption algorithm is commonly used for symmetric encryption?',
      options: ['RSA', 'AES', 'Diffie-Hellman', 'ECC'],
      correctAnswerIndex: 1,
      explanation:
        'AES (Advanced Encryption Standard) is the most widely used symmetric encryption algorithm.',
    },
    {
      id: '41',
      text: 'What is the primary purpose of mitigating vulnerabilities?',
      options: [
        'Preventing unauthorized access',
        'Detecting malicious code',
        'Identifying system weaknesses',
        'Eliminating threats',
      ],
      correctAnswerIndex: 2,
      explanation:
        'The main goal is to identify and address system weaknesses before exploitation.',
    },
    {
      id: '42',
      text: 'Which best describes the goals of computer security?',
      options: [
        'Ensuring availability',
        'Protecting confidentiality',
        'Maintaining integrity',
        'All of the above',
      ],
      correctAnswerIndex: 3,
      explanation:
        'Security aims for the CIA triad: Confidentiality, Integrity, and Availability.',
    },
    {
      id: '43',
      text: 'Which architectural pattern divides a system into reusable components?',
      options: ['Observer', 'Singleton', 'Adapter', 'Component-Based'],
      correctAnswerIndex: 3,
      explanation:
        'Component-Based Architecture emphasizes independent, reusable components.',
    },
    {
      id: '44',
      text: 'In MVC, which component handles user input?',
      options: ['Model', 'View', 'Controller', 'Service'],
      correctAnswerIndex: 2,
      explanation:
        'The Controller processes user interactions and updates the Model/View accordingly.',
    },
    {
      id: '45',
      text: 'Which architecture is best for scalable, fault-tolerant systems?',
      options: ['Client-Server', 'Microservices', 'Layered', 'Monolithic'],
      correctAnswerIndex: 1,
      explanation:
        'Microservices allow independent scaling and fault isolation.',
    },
    {
      id: '46',
      text: 'What is most critical for high availability systems?',
      options: [
        'Redundant components',
        'Low network latency',
        'Optimized queries',
        'More CPU power',
      ],
      correctAnswerIndex: 0,
      explanation: 'Redundancy prevents single points of failure.',
    },
    {
      id: '47',
      text: 'Which design pattern allows multiple objects to handle a request?',
      options: ['Observer', 'Strategy', 'Chain of Responsibility', 'State'],
      correctAnswerIndex: 2,
      explanation:
        'Chain of Responsibility passes requests along a chain of handlers.',
    },
    {
      id: '48',
      text: 'Which statements about testing are true?',
      options: [
        'White-box tests code paths',
        'Selenium automates large test suites',
        'Both A and B',
        'None',
      ],
      correctAnswerIndex: 2,
      explanation:
        'White-box tests internals; Selenium automates web testing at scale.',
    },
    {
      id: '49',
      text: 'Which should NOT be a test case for exam software?',
      options: [
        'Check question alignment with objectives',
        'Prevent fill-in-blank questions',
        'Verify MCQ creation',
        'Validate enrollment codes',
      ],
      correctAnswerIndex: 0,
      explanation:
        'Alignment checking is requirements validation, not functionality testing.',
    },
    {
      id: '50',
      text: 'How to handle usability issues found during testing?',
      options: [
        'Ignore if non-critical',
        'Update problematic UI',
        'Train users',
        'Redesign entire system',
      ],
      correctAnswerIndex: 1,
      explanation: 'Targeted UI updates are the most efficient solution.',
    },
    {
      id: '51',
      text: 'Software quality assurance does NOT include:',
      options: [
        'Preparing quality parameters',
        'Creating test plans',
        'Performing audits',
        'Direct development',
      ],
      correctAnswerIndex: 3,
      explanation: "QA oversees quality but doesn't directly develop features.",
    },
    {
      id: '52',
      text: 'Best approach as a tester in a large team?',
      options: [
        'Work independently',
        'Collaborate with team',
        'Seek recognition',
        'Delegate challenging tasks',
      ],
      correctAnswerIndex: 1,
      explanation: 'Collaboration improves testing effectiveness.',
    },
    {
      id: '53',
      text: 'Which is a valid identifier?',
      options: ['4mfdg', '_7edb', 'Student-age', 'Test 12$'],
      correctAnswerIndex: 1,
      explanation:
        'Valid identifiers can start with underscores but not numbers.',
    },
    {
      id: '54',
      text: 'In an array, grade[5] refers to which element?',
      options: ['5th', '6th', '7th', 'Unknown'],
      correctAnswerIndex: 1,
      explanation: 'Array indices start at 0, so index 5 is the 6th element.',
    },
    {
      id: '55',
      text: 'How do user-defined types aid modular programming?',
      options: [
        'Simplify debugging',
        'Increase reusability',
        'Boost performance',
        'Replace comments',
      ],
      correctAnswerIndex: 0,
      explanation:
        'They encapsulate logic, making debugging and maintenance easier.',
    },
    {
      id: '56',
      text: 'What does C++\'s "new" operator return?',
      options: [
        'Stored value',
        'Success/failure',
        'Memory address',
        'Allocation size',
      ],
      correctAnswerIndex: 2,
      explanation: '"new" returns a pointer to the allocated memory location.',
    },
    {
      id: '57',
      text: 'Best data structure for storing resistances and calculating power?',
      options: [
        'Three 1D arrays',
        '1D + 2D arrays',
        'Single 2D array',
        'Two 1D arrays',
      ],
      correctAnswerIndex: 2,
      explanation:
        '2D array efficiently stores [resistance, current, power] tuples.',
    },
    {
      id: '58',
      text: 'In C++, how to assign string contents?',
      options: ['strcpy()', 'Loops', 'Assignment operator', 'All methods'],
      correctAnswerIndex: 3,
      explanation: 'All methods work, but assignment operator (=) is simplest.',
    },
    {
      id: '59',
      text: 'Which SQL command defines database structures?',
      options: ['DML', 'DDL', 'DCL', 'TCL'],
      correctAnswerIndex: 1,
      explanation:
        'DDL (Data Definition Language) creates/modifies database objects.',
    },
    {
      id: '60',
      text: 'Which SQL operation manipulates data?',
      options: ['DML', 'DDL', 'DCL', 'TCL'],
      correctAnswerIndex: 0,
      explanation:
        'DML (Data Manipulation Language) includes SELECT, INSERT, UPDATE, DELETE.',
    },
    {
      id: '61',
      text: 'Which command modifies a column in a database table?',
      options: ['DROP', 'UPDATE', 'ALTER', 'SET'],
      correctAnswerIndex: 2,
      explanation:
        'ALTER TABLE is used to modify column definitions in a database.',
    },
    {
      id: '62',
      text: 'What defines the overall design of a database?',
      options: ['Application program', 'DDL', 'Schema', 'Source code'],
      correctAnswerIndex: 2,
      explanation:
        'The database schema describes the structure and organization of data.',
    },
    {
      id: '63',
      text: 'Which SQL keyword counts values in a column?',
      options: ['TOTAL', 'COUNT', 'SUM', 'ADD'],
      correctAnswerIndex: 1,
      explanation: 'COUNT() is the aggregate function used to count values.',
    },
    {
      id: '64',
      text: 'A login security protocol is an example of:',
      options: ['Data', 'Software', 'Procedure', 'Hardware'],
      correctAnswerIndex: 2,
      explanation:
        'Login protocols are operational procedures within an information system.',
    },
    {
      id: '65',
      text: 'Best data structure for reversing a word:',
      options: ['Stack', 'Queue', 'Graph', 'Tree'],
      correctAnswerIndex: 0,
      explanation:
        "Stack's LIFO property makes it ideal for reversal operations.",
    },
    {
      id: '66',
      text: 'Primary advantage of hash tables:',
      options: [
        'Easy implementation',
        'Fast access',
        'Good locality',
        'Efficient for small data',
      ],
      correctAnswerIndex: 1,
      explanation: 'Hash tables provide O(1) average-case access time.',
    },
    {
      id: '67',
      text: 'Data structure allowing insertions/deletions at both ends:',
      options: ['Priority Queue', 'Deque', 'Circular Queue', 'Queue'],
      correctAnswerIndex: 1,
      explanation:
        'Deque (Double-ended queue) supports operations at both ends.',
    },
    {
      id: '68',
      text: 'Applications of stack data structure:',
      options: [
        'Function call management',
        'Stock span problem',
        'Expression evaluation',
        'All of above',
      ],
      correctAnswerIndex: 3,
      explanation: 'Stacks are used in all these scenarios.',
    },
    {
      id: '69',
      text: 'Output when pushing "AASTU" onto a stack and popping:',
      options: ['AASTU', 'AASTUAASTU', 'UTSAA', 'UTSAAASTU'],
      correctAnswerIndex: 2,
      explanation: 'Stack reversal produces "UTSAA" (Last In, First Out).',
    },
    {
      id: '70',
      text: 'Queue data structure applications:',
      options: [
        'Resource sharing',
        'Asynchronous data transfer',
        'Load balancing',
        'All of above',
      ],
      correctAnswerIndex: 3,
      explanation: 'Queues are fundamental to all these use cases.',
    },
    {
      id: '71',
      text: 'Correct HTML hyperlink markup:',
      options: ['<link></link>', '<script></script>', '<a></a>', '<b></b>'],
      correctAnswerIndex: 2,
      explanation: '<a> tags define hyperlinks in HTML.',
    },
    {
      id: '72',
      text: 'True statement about HTML forms:',
      options: [
        'Input types render identically',
        'Placeholder text gets submitted',
        'autofocus is optional',
        '<nav> creates dropdowns',
      ],
      correctAnswerIndex: 2,
      explanation:
        'autofocus attribute is not required for form functionality.',
    },
    {
      id: '73',
      text: 'Element for linking external CSS:',
      options: ['<link>', '<script>', '<anchor>', '<style>'],
      correctAnswerIndex: 0,
      explanation: '<link rel="stylesheet"> imports external CSS.',
    },
    {
      id: '74',
      text: 'CSS pseudo-class for mouse hover:',
      options: [':focus', ':hover', ':active', ':visited'],
      correctAnswerIndex: 1,
      explanation: ':hover triggers when mouse pointer is over element.',
    },
    {
      id: '75',
      text: 'Output of given CSS border styling:',
      options: [
        'Solid top, dashed right, double bottom, dotted left',
        'Solid left, dashed top, double right, dotted bottom',
        'Solid bottom, dashed right, double top, dotted left',
        'Solid left, dashed right, double top, dotted bottom',
      ],
      correctAnswerIndex: 0,
      explanation: 'Border styles apply in top-right-bottom-left order.',
    },
    {
      id: '76',
      text: 'JavaScript function output for myFunction(4,3,5):',
      options: ['12', '60', '65', '70'],
      correctAnswerIndex: 1,
      explanation: '4 * 3 * 5 = 60 (parameters multiplied together).',
    },
    {
      id: '77',
      text: 'Output of JavaScript object method call:',
      options: ['John', 'Hello, my name is John Doe.', 'Doe', 'John Doe'],
      correctAnswerIndex: 1,
      explanation: 'The greet() method concatenates firstName and lastName.',
    },
    {
      id: '78',
      text: 'Incorrect PHP echo statement:',
      options: [
        'echo "Hello".name;',
        "echo 'Hello name';",
        'echo "Hello name";',
        'echo "Hello "; echo name;',
      ],
      correctAnswerIndex: 1,
      explanation: "Single quotes don't interpolate variables in PHP.",
    },
    {
      id: '79',
      text: 'Form tag attribute specifying submission target:',
      options: ['method', 'post', 'action', 'get'],
      correctAnswerIndex: 2,
      explanation: 'action attribute defines where form data is sent.',
    },
    {
      id: '80',
      text: 'Output of given C++ pointer code:',
      options: ['20,16,12', '24,20,16,12', '20,16,12,8', '20,16,12,8,4'],
      correctAnswerIndex: 0,
      explanation: 'Pointer arithmetic updates values as shown.',
    },
    {
      id: '81',
      text: 'Output of C++ do-while loop:',
      options: ['10, 20', '10, 21', '30, 21', '30, 20'],
      correctAnswerIndex: 3,
      explanation:
        'Loop executes until x equals y, with continue skipping one iteration.',
    },
    {
      id: '82',
      text: 'Correct if-statement for 3 instructions:',
      options: [
        'if (x<0) a=b*2; y=x; z=a-y;',
        'if (x<0) {a=b*2; y=x; z=a-y;}',
        'if (x<0) a=b*2; y=x; z=a-y;}',
        'if {(x<0) a=b*2; y=x; z=a-y;}',
      ],
      correctAnswerIndex: 1,
      explanation: 'Braces {} group multiple statements in a block.',
    },
    {
      id: '83',
      text: 'Incorrect array usage in functions:',
      options: [
        'Pass entire array',
        'Use individual elements',
        'Return entire array',
        'Optional array size parameter',
      ],
      correctAnswerIndex: 2,
      explanation: 'C++ cannot return entire arrays directly from functions.',
    },
    {
      id: '84',
      text: 'Correct function with default arguments:',
      options: [
        'int smallest(int x, int y=3, int z=2)',
        'int smallest(int x=3, int y=2, int z)',
        'int smallest(int x=3, int y, int z=2)',
        'int smallest(int x, int y, int z)',
      ],
      correctAnswerIndex: 0,
      explanation: 'Default arguments must be right-to-left without gaps.',
    },
    {
      id: '85',
      text: 'Wired network security advantage:',
      options: [
        'Low delay',
        'Requires proximity',
        'High power machines',
        'Needs physical access',
      ],
      correctAnswerIndex: 3,
      explanation: 'Physical access requirement adds security layer.',
    },
    {
      id: '86',
      text: 'Low-power machines are ideal for:',
      options: ['Data centers', 'Offices', 'Mobile networks', 'Wired networks'],
      correctAnswerIndex: 2,
      explanation: 'Mobile devices prioritize energy efficiency.',
    },
    {
      id: '87',
      text: 'European digital mobile radio standard:',
      options: ['AMPS', 'UMTS', 'DECT', 'TETRA'],
      correctAnswerIndex: 1,
      explanation: 'UMTS (3G) was developed as the European mobile standard.',
    },
    {
      id: '88',
      text: 'BSC primary function in GSM:',
      options: [
        'Manage billing',
        'Handle handovers',
        'Provide internet',
        'Secure channels',
      ],
      correctAnswerIndex: 1,
      explanation:
        'Base Station Controller manages handoffs between BTS towers.',
    },
    {
      id: '89',
      text: 'HLR purpose in GSM:',
      options: [
        'Manage handovers',
        'Store subscriber data',
        'Encrypt voice',
        'Route calls',
      ],
      correctAnswerIndex: 1,
      explanation: 'Home Location Register is the central subscriber database.',
    },
    {
      id: '90',
      text: 'Version control manages:',
      options: [
        'Requirements docs',
        'Source code changes',
        'Architecture design',
        'UI prototypes',
      ],
      correctAnswerIndex: 1,
      explanation: 'Tracks changes to source code and related files.',
    },
    {
      id: '91',
      text: 'Software maintenance activity:',
      options: [
        'Write documentation',
        'Design architecture',
        'Gather requirements',
        'Test software',
      ],
      correctAnswerIndex: 0,
      explanation: 'Documentation updates are maintenance tasks.',
    },
    {
      id: '92',
      text: 'Requirements engineering purpose:',
      options: [
        'Design UI',
        'Document process',
        'Gather/analyze needs',
        'Test for bugs',
      ],
      correctAnswerIndex: 2,
      explanation: 'Focuses on understanding stakeholder needs.',
    },
    {
      id: '93',
      text: 'Iterative development model:',
      options: ['Waterfall', 'Spiral', 'Agile', 'V-model'],
      correctAnswerIndex: 2,
      explanation: 'Agile emphasizes iterative, incremental delivery.',
    },
    {
      id: '94',
      text: 'Model with overlapping phases:',
      options: ['Waterfall', 'Spiral', 'Agile', 'V-model'],
      correctAnswerIndex: 1,
      explanation: 'Spiral model combines iteration with phase overlaps.',
    },
    {
      id: '95',
      text: 'Agile principles include:',
      options: [
        'Modularity, concurrency',
        'Iterative development, customer collaboration',
        'Risk analysis, prototyping',
        'Sequential requirements-design',
      ],
      correctAnswerIndex: 1,
      explanation: 'Agile values working software and customer involvement.',
    },
    {
      id: '96',
      text: 'Incorrect statement about projects/programs:',
      options: [
        'Projects have objectives',
        'Programs scope > projects',
        'Portfolio items must be related',
        'B and C',
      ],
      correctAnswerIndex: 2,
      explanation: 'Portfolio items need not be directly related.',
    },
    {
      id: '97',
      text: 'Cash flow analysis technique:',
      options: ['Net Profit', 'Payback Period', 'ROI', 'All of above'],
      correctAnswerIndex: 3,
      explanation: 'All are valid financial analysis methods.',
    },
    {
      id: '98',
      text: 'Most viable by net profit:',
      options: [
        'Project 1 (4,000)',
        'Project 2 (10,000)',
        'Project 3 (7,500)',
        'None',
      ],
      correctAnswerIndex: 1,
      explanation: 'Project 2 shows highest absolute profit.',
    },
    {
      id: '99',
      text: 'Best payback period:',
      options: ['Project 1', 'Project 2', 'Project 3', 'A & B'],
      correctAnswerIndex: 2,
      explanation: 'Project 3 recovers costs fastest (4 years).',
    },
    {
      id: '100',
      text: 'Best ROI project:',
      options: ['Project 1', 'Project 2', 'Project 3', 'None'],
      correctAnswerIndex: 2,
      explanation: 'Project 3 shows highest return (62.5% ROI).',
    },
  ],
}

export default aastuMock1
